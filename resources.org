** Wallpapers
*** [[https://github.com/the-argus/wallpapers][Great Wallpapers here]]

=============================
* 💡 Emacs Lisp (Elisp)
=============================

*** Quickstart
- Emacs Tutorial: `M-x info`, then read "Introduction to Emacs Lisp"
- https://github.com/susam/emacs4cl/blob/master/elisp-cheatsheet.txt
- [[https://learnxinyminutes.com/docs/elisp/]["Elisp in 15 minutes"]]

*** Books
- [[https://www.gnu.org/software/emacs/manual/eintr.html][An Introduction to Programming in Emacs Lisp (official)]]
- https://www.masteringemacs.org — Mastering Emacs blog (real-world Elisp tips)

*** Practice
- Customize your `init.el` using `use-package`, write commands/macros
- [[https://github.com/doomemacs/doomemacs/tree/master/modules][Read other people’s configs]]

=============================
* 📘 Common Lisp (CL)
=============================

*** Syntax + Concepts
- [[https://learnxinyminutes.com/docs/common-lisp/][Quick tour]]
- [[https://lisper.in][Practical intro to Lisp from scratch (great for beginners)]]

*** Core Book
- [[https://gigamonkeys.com/book/][Practical Common Lisp (hands down best CL book)]]

*** Tools
- Install SBCL + Emacs SLIME or SLY
- Try https://portacle.github.io — all-in-one Lisp dev setup

* 🐸 Scheme / Guile (for Guix)

*** Syntax + Basics
- [[https://learnxinyminutes.com/docs/scheme/][Short, simple Scheme tour]]
- [[https://spritely.institute/guides/guile-for-hackers/][Guile for Hackers]]

*** Guile Docs
- [[https://www.gnu.org/software/guile/manual/][Guile Reference Manual]]
- [[https://guix.gnu.org/en/manual/en/guix.html][Guix Manual (read Config chapters)]]

*** Books
- Structure and Interpretation of Computer Programs (SICP) — MIT classic (only if you want deep CS)
  - Free HTML: https://sarabander.github.io/sicp/html/index.xhtml
  - Or video lectures: https://www.youtube.com/playlist?list=PLE18841CABEA24090

*** Guix-Specific
- Try modifying your own `config.scm`
- Follow [[https://www.reddit.com/r/guix/][r/Guix]] and [#guix on Libera IRC]


* 🧠 Bonus: Understanding Lisp Philosophy

- [[https://paulgraham.com/lisp.html][Beating the Averages]]
- [[https://wiki.c2.com/?WhyLisp][Community reflections on why Lisp is special]]

- Scripting in lua (additional languages as well) [[https://docs.fivem.net/docs/scripting-manual/][FiveM Docs]] recommended by FreeCodeCamp users.

* Learn Lua - Free Resources

** 🧠 Best Starting Point
*** [[https://www.lua.org/pil/contents.html][Programming in Lua (1st Edition) – by Roberto Ierusalimschy]]
- Official book by Lua’s creator
- Covers Lua 5.0 (still highly relevant)
- Teaches idiomatic Lua
- Absolutely recommended as your first resource

** 🧰 Practical Lua Resources
*** [[https://learnxinyminutes.com/docs/lua/][Learn Lua in Y Minutes]]
- Quick syntax-driven overview
- Great for polyglot programmers
- Excellent for quick referencing

*** [[https://www.lua.org/manual/5.4/][Lua 5.4 Reference Manual]]
- Official language documentation
- Precise and thorough
- Use like a dictionary (not a tutorial)

** 🧑‍💻 Interactive & Project-Based Learning
*** [[https://exercism.org/tracks/lua][Exercism – Lua Track]]
- Interactive programming challenges
- Mentor feedback available
- Ideal for learning through practice

*** [[https://github.com/EmmanuelOga/luakoans][Lua Koans]]
- Learn by fixing broken unit tests
- Fun and engaging way to internalize Lua concepts

** 📚 Additional Reading & Advanced Material
*** [[https://lua.space/general/lua-for-professionals-book][Lua for Professionals (Free Book)]]
- Covers Lua 5.3+
- Cleanly structured and modern
- Great second step after PIL

*** [[https://github.com/LewisJEllis/awesome-lua][Awesome Lua (GitHub)]]
- Curated list of libraries, tools, and articles
- Great for expanding your Lua toolkit

** ⚙️ For System Scripting, FFI, or Neovim
*** [[https://luajit.org/ext_ffi.html][LuaJIT FFI Tutorial]]
- Low-level interfacing with C
- For embedded and performance-critical Lua

*** [[https://github.com/nanotee/nvim-lua-guide][Neovim Lua Guide]]
- For configuring and scripting Neovim in Lua
- Best resource for plugin authors or power users

** 🏁 Suggested Learning Path
1. Read *Programming in Lua* fully.
2. Practice with *Exercism* and *Lua Koans*.
3. Keep *Lua Manual* and *Awesome Lua* as reference.
4. Build scripts, Neovim configs, or small Lua apps.
5. Deepen your skills with *Lua for Professionals*.

** 🔥 Pro Tip
> Lua is small but powerful — you can master it quickly by writing real code regularly.
